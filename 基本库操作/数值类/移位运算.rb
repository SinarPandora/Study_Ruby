# Ruby 支持位运算
# 位运算比正常的数学运算快很多
# ~    按位取反
# &    按位与
# |    按位或
# ^    按位异或
# >>   右移
# <<   左移

a = 10 # 0000 1010
b = 38 # 0010 0110

# 与
# 0000 1010
# 0010 0110
# ----------
# 0000 0010
#       = 2

puts a & b

# 或
# 0000 1010
# 0010 0110
# ----------
# 0010 1110
#      = 46

puts a | b

# 异或
# 不进位加法
# 0000 1010
# 0010 0110
# ----------
# 0010 1100
#      = 44

puts a ^ b

# 非（实际中用的比较少 ）
# 取反操作
# 因为符号位也取反，所以正数的非是负数
# 0000 1010
# 1111 0101
puts ~a

# 左移
# 相当于乘2 ** n
# 10 << 1
# 00001010
#  00010100
# 0001 0100 = 20
puts a << 3
puts -10 << 3
puts -10 * (2 ** 3)

# 右移
# 相当于除以2 ** n
# 10 >> 1
# 00001010
# 00000101
# 0000 0101 = 5
# 小数部分会被省略
puts a >> 2   #=> 2
puts a >> 2.0 #=> 2
puts -13 >> 2 #=> -4
# (x / (2 ** n)).floor
puts (10 / 4).floor
puts (-13 / 4).floor

# Ruby 没有逻辑移位
# 逻辑右位：无论符号位是1还是0，补位一律用0

# 位运算实现加法
# 0000 1100 12
# 0001 0111 23
# ------------
# 0010 0011 35
a, b = 12, 23
while  b != 0
  xor = a ^ b
  and_left_shift = (a & b) << 1
  a = xor
  b = and_left_shift
end
puts "#{a}"